import { Plugins } from '@capacitor/core';
import { notAvailable } from '../util/models';
import { isFeatureAvailable, featureNotAvailableError } from '../util/feature-check';
import { useState } from 'react';
;
export const availableFeatures = {
    getPhoto: isFeatureAvailable('Camera', 'getPhoto')
};
export function useCamera() {
    const { Camera } = Plugins;
    const [photo, setPhoto] = useState();
    if (!availableFeatures.getPhoto) {
        return Object.assign({ getPhoto: featureNotAvailableError }, notAvailable);
    }
    async function getPhoto(options) {
        const cameraPhoto = await Camera.getPhoto(options);
        setPhoto(cameraPhoto);
        return cameraPhoto;
    }
    return {
        photo,
        getPhoto,
        isAvailable: true
    };
}
//# sourceMappingURL=useCamera.js.map