import { GeolocationPosition, GeolocationOptions } from '@capacitor/core';
import { AvailableResult } from '../util/models';
interface GetCurrentPositionResult extends AvailableResult {
    error?: any;
    currentPosition?: GeolocationPosition;
    getPosition: (options?: GeolocationOptions) => void;
}
interface GeoWatchPositionResult extends AvailableResult {
    error?: any;
    currentPosition?: GeolocationPosition;
    startWatch: (options?: GeolocationOptions) => void;
    clearWatch: () => void;
}
export declare const availableFeatures: {
    getCurrentPosition: boolean;
    watchPosition: boolean;
};
export declare function useCurrentPosition(options?: GeolocationOptions, manual?: boolean): GetCurrentPositionResult;
export declare function useWatchPosition(): GeoWatchPositionResult;
export {};
