import { useState, useEffect } from 'react';
;
export function useKeyboardState() {
    const [state, setKeyboardState] = useState({
        isOpen: false,
        keyboardHeight: 0
    });
    useEffect(() => {
        const showCallback = (ev) => {
            if (typeof window === 'undefined') {
                return;
            }
            const { keyboardHeight } = ev.detail;
            setKeyboardState({
                isOpen: true,
                keyboardHeight
            });
        };
        const hideCallback = () => {
            setKeyboardState({
                isOpen: false,
                keyboardHeight: 0
            });
        };
        window.addEventListener('ionKeyboardDidShow', showCallback);
        window.addEventListener('ionKeyboardDidHide', hideCallback);
        return () => {
            window.removeEventListener('ionKeyboardDidShow', showCallback);
            window.removeEventListener('ionKeyboardDidHide', hideCallback);
        };
    }, [setKeyboardState]);
    return {
        isOpen: state.isOpen,
        keyboardHeight: state.keyboardHeight,
        isAvailable: true
    };
}
//# sourceMappingURL=useKeyboard.js.map