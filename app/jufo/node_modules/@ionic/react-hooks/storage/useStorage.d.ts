import { AvailableResult } from '../util/models';
interface StorageResult extends AvailableResult {
    get: (key: string) => Promise<string | null>;
    set: (key: string, value: string) => Promise<void>;
    remove: (key: string) => void;
    getKeys: () => Promise<{
        keys: string[];
    }>;
    clear: () => Promise<void>;
}
declare type StorageItemResult<T> = [T | undefined, ((value: T) => Promise<void>), boolean];
export declare const availableFeatures: {
    useStorage: boolean;
};
export declare function useStorage(): StorageResult;
export declare function useStorageItem<T>(key: string, initialValue?: T): StorageItemResult<T>;
export {};
