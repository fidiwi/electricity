import { useState, useEffect } from 'react';
import { Plugins } from '@capacitor/core';
import { notAvailable } from '../util/models';
import { isFeatureAvailable } from '../util/feature-check';
;
;
export const availableFeatures = {
    getInfo: isFeatureAvailable('Device', 'getInfo'),
    getLanguageCode: isFeatureAvailable('Device', 'getLanguageCode')
};
export function useGetInfo() {
    const { Device } = Plugins;
    if (!availableFeatures.getInfo) {
        return notAvailable;
    }
    const [info, setInfo] = useState();
    useEffect(() => {
        async function getInfo() {
            const data = await Device.getInfo();
            setInfo(data);
        }
        getInfo();
    }, [Device, setInfo]);
    return {
        info,
        isAvailable: true
    };
}
export function useGetLanguageCode() {
    const { Device } = Plugins;
    if (!availableFeatures.getLanguageCode) {
        return notAvailable;
    }
    const [languageCode, setLanguageCode] = useState();
    useEffect(() => {
        async function getLanguageCode() {
            const data = await Device.getLanguageCode();
            setLanguageCode(data.value);
        }
        getLanguageCode();
    }, [Device, setLanguageCode]);
    return {
        languageCode,
        isAvailable: true
    };
}
//# sourceMappingURL=useDevice.js.map